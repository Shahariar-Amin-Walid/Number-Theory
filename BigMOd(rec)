This is a recursive function...


/***********************************BIGMOD**********************************/
//we have to find (base)^(power) % mod;
#include<bits/stdc++.h>
using namespace std;
int BigMod(int b,int p,int m)
{
    if(p==0)
        return 1;
    else if(p%2==0){
        int half = BigMod(b, p / 2, m);
        return (half * half) % m;
    }
    else{
        int part1 = b % m;
        int part2 = BigMod(b, p - 1, m);
        return (part1 * part2) % m;
    }
}
//Sort version Code.....
int BigMod(int b,int p,int m)
{
    if(p==0)
        return 1;
    int x = BigMod(b, p / 2, m);
    x = (x * x) % m;
    if(p%2==1)
        x = (x * b) % m;
    return x;
}

int main( )
{
    int base, power, mod;
    cin >> base >> power >> mod;
    cout << BigMod(base, power, mod) << endl;
}
